<?xml version="1.0" encoding="UTF-8"?>
<!-- 
    KeyGen2 Protocol Runner Parameter XML schema.

    "Perfection is achieved, not when there is nothing more to add, but when
    there is nothing left to take away" [Antoine de Saint-Exupery]

    Version: BETA 
    Revised: 28-DEC-2012 
    Author: Anders Rundgren

    Copyright 2006-2013 WebPKI.org (http://webpki.org).

    Licensed under the Apache License, Version 2.0 (the "License"); 
    you may not use this file except in compliance with the License. 
    You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->

<xs:schema targetNamespace="http://xmlns.webpki.org/keygen2runner/20121228#"
           xmlns:xs="http://www.w3.org/2001/XMLSchema"
           xmlns:pp="http://xmlns.webpki.org/keygen2runner/20121228#"
           elementFormDefault="qualified" attributeFormDefault="unqualified">

   <!--==========================================================================================
                   The primary (top-level) platform negotiation request object
   ===========================================================================================-->

   <xs:element name="ProtocolParameters">
      <xs:complexType>
         <xs:sequence>
            <xs:element name="PUK" type="xs:string" 

            <!-- A request MAY also include an enveloped XML signature
                 covering the entire request object (which MUST be done
                 through an explicit reference to the request's top-level
                 "ID" attribute).  The client software MUST verify such a
                 signature before proceeding with the process.  The requester
                 is RECOMMENDED to sign using a certificate which already has
                 a trust anchor installed in the potential users' browsers.
                 If the trust anchor is not known, the client software SHOULD
                 warn the user before proceeding.  The user SHOULD be able to
                 abort the operation in case of an unknown issuer.  A broken
                 signature MUST abort the entire process -->
            <xs:element ref="ds:Signature" minOccurs="0"/>

         </xs:sequence> 

         <!-- The requesting issuer SHOULD enquire about capabilities that are
              not default or even may be unavailable due to export restrictions.
              An omission performing a proper capability negotiation could in
              fact lead to run-time errors in the client implementation! -->
         <xs:attributeGroup ref="kg2:basicCapabilities"/>

         <!-- GUI notification -->
         <xs:attribute name="Action" type="kg2:action" use="required"/>

         <!-- "PrivacyEnabled" specifies if the SKS privacy enabled provisioning
              mode is to be used.  Default: false -->
         <xs:attribute name="PrivacyEnabled" type="xs:boolean" use="optional"/>

         <!-- GUI language in preference order.  Primarily for public computers -->
         <xs:attribute name="Languages" type="kg2:languageList" use="optional"/>

         <!-- Key container constraints in preference order -->
         <xs:attribute name="KeyContainers" type="kg2:containerList" use="optional"/>

         <!-- This mandatory server-generated item MUST be unique between
              key provisioning sessions but MUST remain constant among
              requests within a specific session -->
         <xs:attribute name="ID" type="kg2:sksID" use="required"/>

         <!-- Where to HTTP POST the platform negotiation response.
              Note that applicable session cookies MUST be submitted
              in the request as well -->
         <xs:attribute name="SubmitURL" type="kg2:httpURI" use="required"/>

         <!-- If the user aborts the enrollment process the following optional
              URL can be set to inform the issuer that this is the case.
              The server is supposed to return a suitable web-page as the
              response from the HTTP GET operation.  Note that applicable
              session cookies MUST be submitted in the request as well -->
         <xs:attribute name="AbortURL" type="kg2:httpURI" use="optional"/>

      </xs:complexType>
   </xs:element>
                  <xs:attribute name="Value" type="xs:string" use="required"/>

                  <!-- By default values are read-only but they may be
                       declared as read/writable as well -->
                  <xs:attribute name="Writable" type="xs:boolean" use="optional"/>

               </xs:complexType>
            </xs:element>
         </xs:sequence>

         <!-- Mandatory extension attributes -->
         <xs:attributeGroup ref="kg2:extensionAttrs"/>

      </xs:complexType>

      <!-- Property names within a PropertyBag MUST be unique -->
      <xs:unique name="Unique.Property">
         <xs:selector xpath="kg2:Property"/>
         <xs:field xpath="@Name"/>
      </xs:unique>

   </xs:element>

   <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
                    Base-object for representing a created public key
   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

   <xs:element name="PublicKey">
      <xs:complexType>
         <xs:sequence>

            <!-- SKS Reference: createKeyEntry.PublicKey -->
            <xs:choice>

               <xs:element ref="ds11:ECKeyValue"/>

               <xs:element ref="ds:RSAKeyValue"/>

            </xs:choice>

         </xs:sequence>

         <!-- SKS Reference: createKeyEntry.Attestation -->
         <xs:attribute name="Attestation" type="xs:base64Binary" use="optional"/>

         <!-- A unique key-ID which MUST match a "KeyEntry/@ID"
              in the corresponding "KeyCreationRequest" -->
         <xs:attribute name="ID" type="kg2:sksID" use="required"/>

      </xs:complexType>
   </xs:element>

   <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
        Base-object for requesting the creation of a key entry and associated key pair
   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

   <xs:element name="KeyEntry">
      <xs:complexType>

         <!-- SKS Reference: createKeyEntry.ID -->
         <xs:attribute name="ID" type="kg2:sksID" use="required"/>

         <!-- SKS Reference: createKeyEntry.ServerSeed 
              Default: 0 bytes -->
         <xs:attribute name="ServerSeed" use="optional">
            <xs:simpleType>
               <xs:restriction base="xs:base64Binary">
                  <xs:minLength value="1"/>
                  <xs:maxLength value="32"/>
               </xs:restriction>
            </xs:simpleType>
         </xs:attribute>

         <!-- SKS Reference: createKeyEntry.BiometricProtection 
              Default: "none" -->
         <xs:attribute name="BiometricProtection" type="kg2:biomProtTypes" use="optional"/>

         <!-- SKS Reference: createKeyEntry.ExportProtection 
              Default: "non-exportable" -->
         <xs:attribute name="ExportProtection" type="kg2:expProtectionTypes" use="optional"/>

         <!-- SKS Reference: createKeyEntry.DeleteProtection 
              Default: "none" -->
         <xs:attribute name="DeleteProtection" type="kg2:delProtectionTypes" use="optional"/>

         <!-- SKS Reference: createKeyEntry.EnablePINCaching 
              Default: false -->
         <xs:attribute name="EnablePINCaching" type="xs:boolean" use="optional"/>

         <!-- SKS Reference: createKeyEntry.AppUsage -->
         <xs:attribute name="AppUsage" type="kg2:appUsageTypes" use="required"/>

         <!-- SKS Reference: createKeyEntry.KeyAlgorithm -->
         <xs:attribute name="KeyAlgorithm" type="xs:anyURI" use="required"/>

         <!-- SKS Reference: createKeyEntry.KeyParameters --> 
         <xs:attribute name="KeyParameters" type="xs:base64Binary" use="optional"/>

         <!-- SKS Reference: createKeyEntry.FriendlyName 
              Default: "" -->
         <xs:attribute name="FriendlyName" type="kg2:friendlyNameType" use="optional"/>

         <!-- SKS Reference: createKeyEntry.MAC --> 
         <xs:attribute name="MAC" type="xs:base64Binary" use="required"/>

         <!-- SKS Reference: createKeyEntry.EndorsedAlgorithm -->
         <xs:attribute name="EndorsedAlgorithms" type="kg2:uriList" use="optional"/>
        
      </xs:complexType>
   </xs:element>


   <xs:attributeGroup name="extensionAttrs">

      <!-- SKS Reference: addExtension.Type --> 
      <xs:attribute name="Type" type="xs:anyURI" use="required"/>

      <!-- SKS Reference: addExtension.MAC --> 
      <xs:attribute name="MAC" type="xs:base64Binary" use="required"/>

   </xs:attributeGroup>

   <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
      Request sub-object for creating a set of PIN-protected keys associated with a
      a common master PUK code
   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

   <xs:element name="PUKPolicy">
      <xs:complexType>
         <xs:sequence>

            <!-- The PIN-protected key groups -->
            <xs:element ref="kg2:PINPolicy" maxOccurs="unbounded"/>

         </xs:sequence>

         <!-- SKS Reference: createPUKPolicy.ID -->
         <xs:attribute name="ID" type="kg2:sksID" use="required"/>

         <!-- SKS Reference: createPUKPolicy.PUKValue -->
         <xs:attribute name="Value" type="xs:base64Binary" use="required"/>

         <!-- SKS Reference: createPUKPolicy.Format -->
         <xs:attribute name="Format" type="kg2:pinFormats" use="required"/>
    
         <!-- SKS Reference: createPUKPolicy.RetryLimit -->
         <xs:attribute name="RetryLimit" type="xs:unsignedShort" use="required"/>

         <!-- SKS Reference: createPUKPolicy.MAC -->
         <xs:attribute name="MAC" type="xs:base64Binary" use="required"/>
         
      </xs:complexType>
   </xs:element>

   <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
      Request sub-object for creating a set of keys associated with a user PIN policy
   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

   <xs:element name="PINPolicy">
      <xs:complexType>
         <xs:sequence>

            <xs:choice>

               <!-- One or more keys protected by user-defined PINs governed by
                    a common PIN policy -->
               <xs:element ref="kg2:KeyEntry" maxOccurs="unbounded"/>

               <!-- One or more keys protected by issuer-defined PINs -->
               <xs:element name="PresetPIN" maxOccurs="unbounded">
                  <xs:complexType>

                     <xs:sequence>
                        <xs:element ref="kg2:KeyEntry"/>
                     </xs:sequence>
                           
                     <!-- SKS Reference: createKeyEntry.PINValue -->
                     <xs:attribute name="Value" type="xs:base64Binary" use="required"/>

                  </xs:complexType>
               </xs:element>

            </xs:choice>

         </xs:sequence>

         <!-- SKS Reference: createPINPolicy.ID -->
         <xs:attribute name="ID" type="kg2:sksID" use="required"/>

         <!-- SKS Reference: createPINPolicy.PUKPolicyHandle 
              "PUKPolicyHandle" is an implicit and implementation-dependent
              PUK reference object which is defined by the presence of an
              enclosing "PUKPolicy" object -->

         <!-- SKS Reference: createPINPolicy.UserDefined 
              "UserDefined" is an implicit variable which is true unless
              there is a "PresetPIN" object enclosing the "KeyEntry" object -->

         <!-- SKS Reference: createPINPolicy.UserModifiable 
              Default: false for preset PINs, true for user-defined PINs -->
         <xs:attribute name="UserModifiable" type="xs:boolean" use="optional"/>

         <!-- SKS Reference: createPINPolicy.Format -->
         <xs:attribute name="Format" type="kg2:pinFormats" use="required"/>
    
         <!-- SKS Reference: createPINPolicy.RetryLimit -->
         <xs:attribute name="RetryLimit" type="xs:unsignedShort" use="required"/>

         <!-- SKS Reference: createPINPolicy.Grouping 
              Default: "none" -->
         <xs:attribute name="Grouping" type="kg2:pinGrouping" use="optional"/>

         <!-- SKS Reference: createPINPolicy.PatternRestrictions 
              Default: none -->
         <xs:attribute name="PatternRestrictions" type="kg2:pinPatternList" use="optional"/>

         <!-- SKS Reference: createPINPolicy.MinLength -->
         <xs:attribute name="MinLength" type="kg2:pinLength" use="required"/>

         <!-- SKS Reference: createPINPolicy.MaxLength -->
         <xs:attribute name="MaxLength" type="kg2:pinLength" use="required"/>

         <!-- SKS Reference: createPINPolicy.InputMethod 
              Default: "any" -->
         <xs:attribute name="InputMethod" type="kg2:pinInput" use="optional"/>

         <!-- SKS Reference: createPINPolicy.MAC -->
         <xs:attribute name="MAC" type="xs:base64Binary" use="required"/>

      </xs:complexType>
   </xs:element>

   <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
      Request sub-object for creating a key protected by the key "host" device PIN-code
   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

   <xs:element name="DevicePINProtection">
      <xs:complexType>
         <xs:sequence>
            <xs:element ref="kg2:KeyEntry"/>
         </xs:sequence>
      </xs:complexType>
   </xs:element>

   <xs:complexType name="imageData">

      <!-- MIME type. -->
      <xs:attribute name="MIMEType" type="kg2:mimeType" use="required"/>

      <!-- Logotype usage type -->
      <xs:attribute name="Type" type="xs:anyURI" use="required"/>

      <!-- Width in pixels.  For SVG it holds the "ideal" width -->
      <xs:attribute name="Width" type="xs:positiveInteger" use="required"/>

      <!-- Height in pixels.  For SVG it holds the "ideal" height -->
      <xs:attribute name="Height" type="xs:positiveInteger" use="required"/>

   </xs:complexType>

   <xs:complexType name="targetKey">

      <!-- One of the two IDs identifying a provisioning session -->
      <xs:attribute name="ClientSessionID" type="kg2:sksNCName" use="required"/>

      <!-- The other ID identifying a provisioning session -->
      <xs:attribute name="ServerSessionID" type="kg2:sksNCName" use="required"/>

      <!-- Handle to the end entity certificate (key ID) -->
      <xs:attribute name="CertificateFingerprint" type="xs:base64Binary" use="required"/>

      <!-- Mandatory MAC (Message Authentication Code) -->
      <xs:attribute name="MAC" type="xs:base64Binary" use="required"/>

      <!-- Authorization -->
      <xs:attribute name="Authorization" type="xs:base64Binary" use="required"/>

   </xs:complexType>

   <xs:element name="MatchingCredential">
      <xs:complexType>

         <!-- The End Entity Certificate -->
         <xs:attribute name="EndEntityCertificate" type="xs:base64Binary" use="optional"/>

         <!-- One of the two IDs identifying a provisioning session -->
         <xs:attribute name="ClientSessionID" type="kg2:sksNCName" use="required"/>

         <!-- The other ID identifying a provisioning session -->
         <xs:attribute name="ServerSessionID" type="kg2:sksNCName" use="required"/>

         <!-- Locked?  Default: false -->
         <xs:attribute name="Locked" type="xs:boolean" use="optional"/>

      </xs:complexType>
   </xs:element>

   <xs:element name="SearchFilter">
      <xs:complexType>

         <!-- Qualifiers. At least one MUST be defined.  Note that "IssuedBefore"
              and "IssuedAfter" can be used to create a region that should either
              be included or excluded depending on which one is biggest.  The "Subject"
              and "Issuer" attributes are regular expressions matching RFC 2253 names.
              Note that the "Issuer" attribute is searched for through the entire path.
              "Email" attributes MUST be searched for in both the subject DN and in
              subject alt name extensions -->
         <xs:attribute name="Issuer" type="kg2:distinguishedNameExpr" use="optional"/>
         <xs:attribute name="Subject" type="kg2:distinguishedNameExpr" use="optional"/>
         <xs:attribute name="Serial" type="xs:integer" use="optional"/>
         <xs:attribute name="Email" type="xs:string" use="optional"/>
         <xs:attribute name="Policy" type="kg2:oidValue" use="optional"/>
         <xs:attribute name="ExcludedPolicies" type="kg2:oidValueList" use="optional"/>
         <xs:attribute name="IssuedBefore" type="xs:dateTime" use="optional"/>
         <xs:attribute name="IssuedAfter" type="xs:dateTime" use="optional"/>

      </xs:complexType>
   </xs:element>

   <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
      IDs flowing between the SKS and an issuer MUST be 1-32 bytes using a constrained
      character set
   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

   <xs:simpleType name="sksID">
      <xs:restriction base="xs:ID">
         <xs:pattern value="[0-9,a-z,A-Z,_,\-,\.]*"/>
         <xs:maxLength value="32"/>
      </xs:restriction>
   </xs:simpleType>

   <xs:simpleType name="sksNCName">
      <xs:restriction base="xs:NCName">
         <xs:pattern value="[0-9,a-z,A-Z,_,\-,\.]*"/>
         <xs:maxLength value="32"/>
       </xs:restriction>
   </xs:simpleType>

   <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
      Image definition.  An image SHOULD consist of a size-wise device-adapted
      GIF or PNG picture
   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

   <xs:complexType name="imageType">
      <xs:simpleContent>
         <xs:extension base="xs:base64Binary">
            <xs:attribute name="MIMEType" type="kg2:mimeType" use="required"/>
         </xs:extension>
      </xs:simpleContent>
   </xs:complexType>

   <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
                              Action definitions
   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

   <xs:simpleType name="action">
      <xs:restriction base="xs:string">
         <xs:enumeration value="create"/>
         <xs:enumeration value="unlock"/>
         <xs:enumeration value="update"/>
         <xs:enumeration value="resume"/>
      </xs:restriction>
   </xs:simpleType>

   <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
                            Application usage definitions
   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

   <xs:simpleType name="appUsageTypes">
      <xs:restriction base="xs:string">
         <xs:enumeration value="signature"/>
         <xs:enumeration value="authentication"/>
         <xs:enumeration value="encryption"/>
         <xs:enumeration value="universal"/>
      </xs:restriction>
   </xs:simpleType>

   <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
                             Biometric protection definitions
   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

   <xs:simpleType name="biomProtTypes">
      <xs:restriction base="xs:string">
         <xs:enumeration value="none"/>
         <xs:enumeration value="alternative"/>
         <xs:enumeration value="combined"/>
         <xs:enumeration value="exclusive"/>
      </xs:restriction>
   </xs:simpleType>

    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
                               Delete protection definitions
   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

   <xs:simpleType name="delProtectionTypes">
      <xs:restriction base="xs:string">
         <xs:enumeration value="none"/>
         <xs:enumeration value="pin"/>
         <xs:enumeration value="puk"/>
         <xs:enumeration value="non-deletable"/>
      </xs:restriction>
   </xs:simpleType>

    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
                               Export protection definitions
   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

   <xs:simpleType name="expProtectionTypes">
      <xs:restriction base="xs:string">
         <xs:enumeration value="none"/>
         <xs:enumeration value="pin"/>
         <xs:enumeration value="puk"/>
         <xs:enumeration value="non-exportable"/>
      </xs:restriction>
   </xs:simpleType>

   <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
                                  PIN policy definitions
   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

   <xs:simpleType name="pinLength">
      <xs:restriction base="xs:positiveInteger">
         <xs:maxInclusive value="100"/>
      </xs:restriction>
   </xs:simpleType>

   <xs:simpleType name="pinFormats">
      <xs:restriction base="xs:string">
         <xs:enumeration value="numeric"/>
         <xs:enumeration value="alphanumeric"/>
         <xs:enumeration value="string"/>
         <xs:enumeration value="binary"/>
      </xs:restriction>
   </xs:simpleType>

   <xs:simpleType name="pinGrouping">
      <xs:restriction base="xs:string">
         <xs:enumeration value="none"/>
         <xs:enumeration value="shared"/>
         <xs:enumeration value="signature+standard"/>
         <xs:enumeration value="unique"/>
      </xs:restriction>
   </xs:simpleType>

   <xs:simpleType name="pinInput">
      <xs:restriction base="xs:string">
         <xs:enumeration value="any"/>
         <xs:enumeration value="programmatic"/>
         <xs:enumeration value="trusted-gui"/>
      </xs:restriction>
   </xs:simpleType>

   <xs:simpleType name="pinPatternList">
      <xs:restriction>
         <xs:simpleType>
            <xs:list>
               <xs:simpleType>
                  <xs:restriction base="xs:string">
                     <xs:enumeration value="two-in-a-row"/>
                     <xs:enumeration value="three-in-a-row"/>
                     <xs:enumeration value="sequence"/>
                     <xs:enumeration value="repeated"/>
                     <xs:enumeration value="missing-group"/>
                  </xs:restriction>
               </xs:simpleType>
            </xs:list>
         </xs:simpleType>
         <xs:minLength value="1"/>
      </xs:restriction>
   </xs:simpleType>

   <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
                                 URI and OID definitions
   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

   <xs:simpleType name="oidValue">
      <xs:restriction base="xs:string">
         <xs:pattern value="[1-9][0-9]*(\.[1-9][0-9]*)*"/>
      </xs:restriction>
   </xs:simpleType>

   <xs:simpleType name="oidValueList">
      <xs:restriction>
         <xs:simpleType>
            <xs:list itemType="kg2:oidValue"/>
         </xs:simpleType>
         <xs:minLength value="1"/>
      </xs:restriction>
   </xs:simpleType>

   <xs:simpleType name="httpURI">
      <xs:restriction base="xs:anyURI">
         <xs:pattern value="https?://.*"/>
      </xs:restriction>
   </xs:simpleType>

   <xs:simpleType name="uriList">
      <xs:restriction>
         <xs:simpleType>
            <xs:list itemType="xs:anyURI"/>
         </xs:simpleType>
         <xs:minLength value="1"/>
      </xs:restriction>
   </xs:simpleType>

   <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
                                  Language list definitions
   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

   <xs:simpleType name="languageList">
      <xs:restriction>
         <xs:simpleType>
            <xs:list itemType="xs:language"/>
         </xs:simpleType>
         <xs:minLength value="1"/>
      </xs:restriction>
   </xs:simpleType>

   <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
                MIME type definition (MUST NOT contain character encoding)
   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

   <xs:simpleType name="mimeType">
      <xs:restriction base="xs:string">
         <xs:pattern value="[^;]+"/>
      </xs:restriction>
   </xs:simpleType>

   <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
                                  Key container definitions
   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

   <xs:simpleType name="containerList">
      <xs:restriction>
         <xs:simpleType>
            <xs:list>
               <xs:simpleType>
                  <xs:restriction base="xs:string">
                     <xs:enumeration value="File"/>
                     <xs:enumeration value="TPM"/>
                     <xs:enumeration value="SIM"/>
                     <xs:enumeration value="External"/>
                  </xs:restriction>
               </xs:simpleType>
            </xs:list>
         </xs:simpleType>
         <xs:minLength value="1"/>
      </xs:restriction>
   </xs:simpleType>

   <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
     "Subject" attributes MUST be represented as regular expressions compatible with
     the XML Schema "pattern" facet.  Note that the regular expressions MUST be
     targeted for RFC 4514 encoded data
   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

   <xs:simpleType name="distinguishedNameExpr">
      <xs:restriction base="xs:string">
         <xs:pattern value="\S.*"/>
      </xs:restriction>
   </xs:simpleType>

   <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
                                  Miscellenous
   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

   <xs:simpleType name="friendlyNameType">
      <xs:restriction base="xs:string">
         <xs:minLength value="1"/>
         <xs:maxLength value="100"/>
      </xs:restriction>
   </xs:simpleType>

</xs:schema>
